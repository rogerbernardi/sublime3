{
	"folder_history":
	[
		"/D/dev/Git/yolle/ionic"
	],
	"last_version": 3114,
	"last_window_id": 1,
	"log_indexing": false,
	"settings":
	{
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
				]
			},
			"buffers":
			[
				{
					"contents": "humble;\ndeep blue see;\nfirecode;\nflat monokai;\njuice;\nkane;\nlegacy;\nlegacypack;\nsolarsooty\n\nangular.module('app.controllers', [])\n        \n.controller('cadastroCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n\n\n}])\n   \n.controller('produtoVendaCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n\n\n}])\n   \n.controller('produtoEtiquetasCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n	var refProdutoEtiquetas = firebase.database().ref('produtoEtiquetas');\n	$scope.etiquetas = $firebaseArray(refProdutoEtiquetas);\n\n	$scope.onEtiquetaAdd=function (etiqueta) {\n		$scope.etiquetas.$add(etiqueta).then(function ref(argument) {\n			console.log('Etiqueta de produto adicionada');\n			\n		});\n	};\n\n	$scope.onEtiquetaDelete = function (etiqueta) {\n    	$scope.etiquetas.$remove(etiqueta);\n    	console.log(\"Etiqueta de produto deletada\");\n  	};\n	\n	$scope.onEtiquetaEdit = function(etiqueta) {\n	  	console.log(etiqueta);\n	  	$scope.etiqueta = etiqueta;\n	};\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n\n.controller('produtosListaCtrl', ['$scope', '$stateParams', '$firebaseObject', '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject) {\n	var refProdutos = firebase.database().ref().child('produtos');\n	$scope.produtos = $firebaseObject(refProdutos);\n\n	var refProdutoEstado = firebase.database().ref('produtoEstados');\n	$scope.estados = $firebaseArray(refProdutoEstado);\n	\n	var refProdutoCategorias = firebase.database().ref('produtoCategorias');\n	$scope.categorias = $firebaseArray(refProdutoCategorias);\n\n	$scope.onProdutoLoad = function(idProduto) {\n		console.log(\"onProdutoLoad\");\n		console.log(\"$stateParams: \" + idProduto);\n		var refProduto = firebase.database().ref('produtos').child(idProduto);\n		$scope.produto = $firebaseArray(refProduto);\n		console.log($scope.produto.$id);\n		$scope.produto = this.produto;\n		\n	};	\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n\n}])\n\n.controller('produtoNovoCtrl', ['$scope', '$stateParams', '$firebaseObject', '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject) {\n	var refProdutos = firebase.database().ref().child('produtos');\n	$scope.produtos = $firebaseObject(refProdutos);\n\n	$scope.onProdutoAdd=function (produto) {\n		$scope.produtos.$add(produto).then(function (ref) {\n			var id = ref.key;\n			console.log('Produto de produto adicionado ' + id );\n			console.log(ref);\n			//$location.path(\"/editarProduto/:idProduto\");\n			produto.nome = \"\";\n		});\n			\n	};\n\n	$scope.onProdutoDelete = function (produto) {\n    	$scope.produtos.$remove(produto);\n    	console.log(\"Produto deletado\");\n  	};\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n   \n.controller('produtoEditarCtrl', ['$scope', '$stateParams', '$firebaseObject', '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject) {\n	// para apagar direto na lista\n	var produtoId = $stateParams.produtoId;\n	var produtoNome = $stateParams.produtoNome;\n	console.log('Produto editar recebeu o produtoId: '+produtoId+' de nome: '+produtoNome);\n\n	var refProdutos = firebase.database().ref('produtos');\n	$scope.produtos = $firebaseObject(refProdutos);\n	var produtos = $scope.produtos;\n\n	var refProdutoEstado = firebase.database().ref('produtoEstados');\n	$scope.estados = $firebaseArray(refProdutoEstado);\n	\n	var refProdutoCategorias = firebase.database().ref('produtoCategorias');\n	$scope.categorias = $firebaseArray(refProdutoCategorias);\n	 	\n	$scope.onProdutoLoad = function(produtoId) {\n		console.log(\"onProdutoLoad\");\n		var refProduto = firebase.database().ref()\n			.child('produtos')\n			.child(produtoId);\n		$scope.produto = $firebaseArray(refProduto);\n	};\n	\n	$scope.onProdutoLoad(produtoId);\n\n	$scope.onProdutoEdit = function(produto) {\n		$scope.produto = produto;\n	};\n\n	$scope.onProdutoDelete = function (produto) {\n    	$scope.produtos.$remove(produto);\n    	console.log(\"Produto deletado\");\n  	};\n	\n	// inicio toggle\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n	\n}])\n   \n \n   \n.controller('produtoComposicaoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject', \nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	//{produtoId:produto.$id,produtoNome:produto.nome}\n	var produtoId = $stateParams.produtoId;\n	var produtoNome = $stateParams.produtoNome;\n	console.log('Produto composição recebeu o produtoId: '+produtoId+' de nome: '+produtoNome);\n	\n	var refInsumos = firebase.database().ref('insumos');\n	$scope.insumos = $firebaseArray(refInsumos);\n\n  	var refProduto = firebase.database()\n  		.ref('produtos')\n  		.child(produtoId);\n  	$scope.produto= $firebaseObject(refProduto);\n\n	var refProdutoComposicao = firebase.database()\n		.ref('produtosComposicao')\n		.orderByChild('produtoId')\n		.equalTo(produtoId)\n	$scope.produtoComposicao = $firebaseArray(refProdutoComposicao);\n	console.log($scope.produtoComposicao);\n\n	$scope.onProdutoComposicaoAdd=function (insumo, produto) {\n		$scope.produtoComposicao.$add({\n			'produtoNome': produto.nome, \n			'produtoId': produto.$id, \n			'insumoNome':insumo.nome,\n			'insumoId': insumo.$id \n		});\n	};\n\n	$scope.onProdutoComposicaoDelete = function (insumo) {\n		$scope.produtoComposicao.$remove(insumo);\n  	};\n\n  	$scope.console=function(arg1, arg2){\n  		console.log('produtoId'+arg1);\n  		console.log('insumoId'+arg2);\n  	};\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('produtoComposicaoDetalheCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject','$ionicPopup',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject, $ionicPopup)  {\n	var composicaoId = $stateParams.composicaoId;\n	var produtoId = $stateParams.produtoId;\n	var insumoId = $stateParams.insumoId;\n	console.log('ProdutoComposicaoDetalhe');\n	console.log('ID de composicaoId: ' + composicaoId);\n	console.log('ID de produto: ' + produtoId);\n	console.log('ID de insumo: ' + insumoId);\n\n	var refProdutoComposicaoDetalhe = firebase.database()\n			.ref('produtosComposicaoDetalhe')\n			.child(composicaoId);\n	$scope.produtoComposicaoDetalhe = $firebaseObject(refProdutoComposicaoDetalhe);\n	$scope.produtoComposicaoDetalhe.$save({\n		'composicaoId': composicaoId,\n		'produtoId': produtoId, \n		'insumoId': insumoId \n	});\n\n	$scope.showConfirm = function() {\n	var confirmPopup = $ionicPopup.alert({\n	 title:\n	 `\n	   	<ion-content> Pagina de insumos do produto </ion-content>\n	 `,\n	 \n	 template: \n	 `\n	 	\n	 		Esta página exibe o histórico de produtos fornecidos ou serviços prestados\n	 		deste produto.</br></br>\n	 		As informações aqui contidas, são provenientes da área de compras.</br></br>\n	 		Alguns dos campos podem ter edição bloqueada pois são automaticamente\n	 		atualizados por algum processo de negócio definido no software.</br>\n\n	 `\n	});\n\n	confirmPopup.then(function(res) {\n	 if(res) {\n	   console.log('You are sure');\n	 } else {\n	   console.log('You are not sure');\n	 }\n	});\n	};\n\n 	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n\n \n.controller('fornecedorPedidoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject', \nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log(\"Fornecedor estoque recebeu o ID:\");\n	console.log($stateParams.id);\n	\n	var refpedidos = firebase.database().ref('pedidos');\n	$scope.pedidos = $firebaseArray(refpedidos);\n\n\n  	var refFornecedor = firebase.database()\n  		.ref('fornecedores')\n  		.child($stateParams.id);\n  	\n  	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n	var refFornecedorPedido = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.id)\n		.child('pedidos');\n	\n	$scope.fornecedorPedido = $firebaseArray(refFornecedorPedido);\n\n  	$scope.console = function (pedido, fornecedor) {\n		console.log(fornecedor.$id);\n		console.log(pedido.$id);\n  	}\n\n	$scope.onFornecedorPedidoAdd=function (pedidoNome) {\n		//console.log(pedidoNome, pedidoPrecoCusto);\n		//pedidoId = $scope.fornecedorPedido.length +1;\n		$scope.fornecedorPedido.$add({nome: pedidoNome});\n		//console.log($scope.fornecedorPedido);\n	};\n\n	$scope.onFornecedorPedidoDelete = function (pedido) {\n		$scope.fornecedorPedido.$remove(pedido);\n  	};\n\n  	$scope.onFornecedorPedidoHistoricoAdd = function(pedido) {\n  		var refFornecedorPedidoHistorico = firebase.database()\n  				.ref('fornecedores')\n  				.child($stateParams.id)\n  				.child('pedidos')\n  				.child(pedido.$id);\n  		$scope.fornecedorPedidoHistorico = $firebaseArray(refFornecedorPedidoHistorico);\n  		//$scope.fornecedorPedidoHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorPedidoHistorico/'+pedido.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorPedidoHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	}\n\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorPedidoHistoricoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject','$ionicPopup',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject, $ionicPopup)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log('ID de fornecedor: ' + $stateParams.idFornecedor);\n	console.log('ID de pedido: ' + $stateParams.idPedido);\n\n	var refFornecedorPedidoHistorico = firebase.database()\n			.ref('fornecedores')\n			.child($stateParams.idFornecedor)\n			.child('pedidos')\n			.child($stateParams.idPedido);\n\n	$scope.fornecedorPedidoHistorico = $firebaseObject(refFornecedorPedidoHistorico);\n\n	var refFornecedor = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.idFornecedor);\n	\n	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n  	$scope.onFornecedorPedidoHistoricoAdd = function(pedido) {\n  		//$scope.fornecedorPedidoHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorPedidoHistorico/'+pedido.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorPedidoHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	};\n\n\n\n	$scope.showConfirm = function() {\n	var confirmPopup = $ionicPopup.alert({\n	 title:\n	 `\n	   	<ion-content> Pagina de pedidos do fornecedor </ion-content>\n	 `,\n	 \n	 template: \n	 `\n	 	\n	 		Esta página exibe o histórico de pedidos aos produtos fornecidos ou serviços prestados\n	 		deste fornecedor.</br></br>\n	 		As informações aqui contidas, são provenientes da área de compras.</br></br>\n	 		Alguns dos campos podem ter edição bloqueada pois são automaticamente\n	 		atualizados por algum processo de negócio definido no software.</br>\n\n	 `\n	});\n\n	confirmPopup.then(function(res) {\n	 if(res) {\n	   console.log('You are sure');\n	 } else {\n	   console.log('You are not sure');\n	 }\n	});\n	};\n\n 	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorOrcamentoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject', \nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log(\"Fornecedor estoque recebeu o ID:\");\n	console.log($stateParams.id);\n	\n	var reforcamentos = firebase.database().ref('orcamentos');\n	$scope.orcamentos = $firebaseArray(reforcamentos);\n\n\n  	var refFornecedor = firebase.database()\n  		.ref('fornecedores')\n  		.child($stateParams.id);\n  	\n  	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n	var refFornecedorOrcamento = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.id)\n		.child('orcamentos');\n	\n	$scope.fornecedorOrcamento = $firebaseArray(refFornecedorOrcamento);\n\n  	$scope.console = function (orcamento, fornecedor) {\n		console.log(fornecedor.$id);\n		console.log(orcamento.$id);\n  	}\n\n	$scope.onFornecedorOrcamentoAdd=function (orcamentoNome) {\n		//console.log(orcamentoNome, orcamentoPrecoCusto);\n		//orcamentoId = $scope.fornecedorOrcamento.length +1;\n		$scope.fornecedorOrcamento.$add({nome: orcamentoNome});\n		//console.log($scope.fornecedorOrcamento);\n	};\n\n	$scope.onFornecedorOrcamentoDelete = function (orcamento) {\n		$scope.fornecedorOrcamento.$remove(orcamento);\n  	};\n\n  	$scope.onFornecedorOrcamentoHistoricoAdd = function(orcamento) {\n  		var refFornecedorOrcamentoHistorico = firebase.database()\n  				.ref('fornecedores')\n  				.child($stateParams.id)\n  				.child('orcamentos')\n  				.child(orcamento.$id);\n  		$scope.fornecedorOrcamentoHistorico = $firebaseArray(refFornecedorOrcamentoHistorico);\n  		//$scope.fornecedorOrcamentoHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorOrcamentoHistorico/'+orcamento.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorOrcamentoHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	}\n\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorOrcamentoHistoricoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject','$ionicPopup',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject, $ionicPopup)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log('ID de fornecedor: ' + $stateParams.idFornecedor);\n	console.log('ID de orcamento: ' + $stateParams.idInsumo);\n\n	var refFornecedorOrcamentoHistorico = firebase.database()\n			.ref('fornecedores')\n			.child($stateParams.idFornecedor)\n			.child('orcamentos')\n			.child($stateParams.idInsumo);\n\n	$scope.fornecedorOrcamentoHistorico = $firebaseObject(refFornecedorOrcamentoHistorico);\n\n	var refFornecedor = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.idFornecedor);\n	\n	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n  	$scope.onFornecedorOrcamentoHistoricoAdd = function(orcamento) {\n  		//$scope.fornecedorOrcamentoHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorOrcamentoHistorico/'+orcamento.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorOrcamentoHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	};\n\n\n\n	$scope.showConfirm = function() {\n	var confirmPopup = $ionicPopup.alert({\n	 title:\n	 `\n	   	<ion-content> Pagina de orçamentos do fornecedor </ion-content>\n	 `,\n	 \n	 template: \n	 `\n	 	\n	 		Esta página exibe o histórico de orçamentos aos produtos fornecidos ou serviços prestados\n	 		deste fornecedor.</br></br>\n	 		As informações aqui contidas, são provenientes da área de compras.</br></br>\n	 		Alguns dos campos podem ter edição bloqueada pois são automaticamente\n	 		atualizados por algum processo de negócio definido no software.</br>\n\n	 `\n	});\n\n	confirmPopup.then(function(res) {\n	 if(res) {\n	   console.log('You are sure');\n	 } else {\n	   console.log('You are not sure');\n	 }\n	});\n	};\n\n 	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorPagamentoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject', \nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log(\"Fornecedor estoque recebeu o ID:\");\n	console.log($stateParams.id);\n	\n	var refpagamentos = firebase.database().ref('pagamentos');\n	$scope.pagamentos = $firebaseArray(refpagamentos);\n\n\n  	var refFornecedor = firebase.database()\n  		.ref('fornecedores')\n  		.child($stateParams.id);\n  	\n  	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n	var refFornecedorPagamento = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.id)\n		.child('pagamentos');\n	\n	$scope.fornecedorPagamento = $firebaseArray(refFornecedorPagamento);\n\n  	$scope.console = function (pagamento, fornecedor) {\n		console.log(fornecedor.$id);\n		console.log(pagamento.$id);\n  	}\n\n	$scope.onFornecedorPagamentoAdd=function (pagamentoNome) {\n		//console.log(pagamentoNome, pagamentoPrecoCusto);\n		//pagamentoId = $scope.fornecedorPagamento.length +1;\n		$scope.fornecedorPagamento.$add({nome: pagamentoNome});\n		//console.log($scope.fornecedorPagamento);\n	};\n\n	$scope.onFornecedorPagamentoDelete = function (pagamento) {\n		$scope.fornecedorPagamento.$remove(pagamento);\n  	};\n\n  	$scope.onFornecedorPagamentoHistoricoAdd = function(pagamento) {\n  		var refFornecedorPagamentoHistorico = firebase.database()\n  				.ref('fornecedores')\n  				.child($stateParams.id)\n  				.child('pagamentos')\n  				.child(pagamento.$id);\n  		$scope.fornecedorPagamentoHistorico = $firebaseArray(refFornecedorPagamentoHistorico);\n  		//$scope.fornecedorPagamentoHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorPagamentoHistorico/'+pagamento.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorPagamentoHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	}\n\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorPagamentoHistoricoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject','$ionicPopup',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject, $ionicPopup)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log('ID de fornecedor: ' + $stateParams.idFornecedor);\n	console.log('ID de pagamento: ' + $stateParams.idPagamento);\n\n	var refFornecedorPagamentoHistorico = firebase.database()\n			.ref('fornecedores')\n			.child($stateParams.idFornecedor)\n			.child('pagamentos')\n			.child($stateParams.idPagamento);\n\n	$scope.fornecedorPagamentoHistorico = $firebaseObject(refFornecedorPagamentoHistorico);\n\n	var refFornecedor = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.idFornecedor);\n	\n	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n  	$scope.onFornecedorPagamentoHistoricoAdd = function(pagamento) {\n  		//$scope.fornecedorPagamentoHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorPagamentoHistorico/'+pagamento.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorPagamentoHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	};\n\n\n\n	$scope.showConfirm = function() {\n	var confirmPopup = $ionicPopup.alert({\n	 title:\n	 `\n	   	<ion-content> Pagina de pagamentos do fornecedor </ion-content>\n	 `,\n	 \n	 template: \n	 `\n	 	\n	 		Esta página exibe o histórico de pagamentos aos produtos fornecidos ou serviços prestados\n	 		deste fornecedor.</br></br>\n	 		As informações aqui contidas, são provenientes da área de compras.</br></br>\n	 		Alguns dos campos podem ter edição bloqueada pois são automaticamente\n	 		atualizados por algum processo de negócio definido no software.</br>\n\n	 `\n	});\n\n	confirmPopup.then(function(res) {\n	 if(res) {\n	   console.log('You are sure');\n	 } else {\n	   console.log('You are not sure');\n	 }\n	});\n	};\n\n 	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorContratoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject', \nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log(\"Fornecedor estoque recebeu o ID:\");\n	console.log($stateParams.id);\n	\n	var refcontratos = firebase.database().ref('fornecedorContratos');\n	$scope.contratos = $firebaseArray(refcontratos);\n\n\n  	var refFornecedor = firebase.database()\n  		.ref('fornecedores')\n  		.child($stateParams.id);\n  	\n  	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n	var refFornecedorContrato = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.id)\n		.child('contratos');\n	\n	$scope.fornecedorContrato = $firebaseArray(refFornecedorContrato);\n\n  	$scope.console = function (contrato, fornecedor) {\n		console.log(fornecedor.$id);\n		console.log(contrato.$id);\n  	}\n\n	$scope.onFornecedorContratoAdd=function (contratoNome) {\n		//console.log(contratoNome, contratoPrecoCusto);\n		//contratoId = $scope.fornecedorContrato.length +1;\n		$scope.fornecedorContrato.$add({nome: contratoNome});\n		//console.log($scope.fornecedorContrato);\n	};\n\n	$scope.onFornecedorContratoDelete = function (contrato) {\n		$scope.fornecedorContrato.$remove(contrato);\n  	};\n\n  	$scope.onFornecedorContratoHistoricoAdd = function(contrato) {\n  		var refFornecedorContratoHistorico = firebase.database()\n  				.ref('fornecedores')\n  				.child($stateParams.id)\n  				.child('contratos')\n  				.child(contrato.$id);\n  		$scope.fornecedorContratoHistorico = $firebaseArray(refFornecedorContratoHistorico);\n  		//$scope.fornecedorContratoHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorContratoHistorico/'+contrato.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorContratoHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	}\n\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorContratoHistoricoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject','$ionicPopup',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject, $ionicPopup)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log('ID de fornecedor: ' + $stateParams.idFornecedor);\n	console.log('ID de contrato: ' + $stateParams.idContrato);\n\n	var refFornecedorContratoHistorico = firebase.database()\n			.ref('fornecedores')\n			.child($stateParams.idFornecedor)\n			.child('contratos')\n			.child($stateParams.idContrato);\n\n	$scope.fornecedorContratoHistorico = $firebaseObject(refFornecedorContratoHistorico);\n\n	var refFornecedor = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.idFornecedor);\n	\n	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n  	$scope.onFornecedorContratoHistoricoAdd = function(contrato) {\n  		//$scope.fornecedorContratoHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorContratoHistorico/'+contrato.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorContratoHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	};\n\n\n\n	$scope.showConfirm = function() {\n	var confirmPopup = $ionicPopup.alert({\n	 title:\n	 `\n	   	<ion-content> Pagina de contratos do fornecedor </ion-content>\n	 `,\n	 \n	 template: \n	 `\n	 	\n	 		Esta página exibe o histórico de contratos aos produtos fornecidos ou serviços prestados\n	 		deste fornecedor.</br></br>\n	 		As informações aqui contidas, são provenientes da área de compras.</br></br>\n	 		Alguns dos campos podem ter edição bloqueada pois são automaticamente\n	 		atualizados por algum processo de negócio definido no software.</br>\n\n	 `\n	});\n\n	confirmPopup.then(function(res) {\n	 if(res) {\n	   console.log('You are sure');\n	 } else {\n	   console.log('You are not sure');\n	 }\n	});\n	};\n\n 	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorEtiquetaCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject', \nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log(\"Fornecedor estoque recebeu o ID:\");\n	console.log($stateParams.id);\n	\n	var refetiquetas = firebase.database().ref('fornecedorEtiquetas');\n	$scope.etiquetas = $firebaseArray(refetiquetas);\n\n\n  	var refFornecedor = firebase.database()\n  		.ref('fornecedores')\n  		.child($stateParams.id);\n  	\n  	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n	var refFornecedorEtiqueta = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.id)\n		.child('etiquetas');\n	\n	$scope.fornecedorEtiqueta = $firebaseArray(refFornecedorEtiqueta);\n\n  	$scope.console = function (etiqueta, fornecedor) {\n		console.log(fornecedor.$id);\n		console.log(etiqueta.$id);\n  	}\n\n	$scope.onFornecedorEtiquetaAdd=function (etiquetaNome) {\n		//console.log(etiquetaNome, etiquetaPrecoCusto);\n		//etiquetaId = $scope.fornecedorEtiqueta.length +1;\n		$scope.fornecedorEtiqueta.$add({nome: etiquetaNome});\n		//console.log($scope.fornecedorEtiqueta);\n	};\n\n	$scope.onFornecedorEtiquetaDelete = function (etiqueta) {\n		$scope.fornecedorEtiqueta.$remove(etiqueta);\n  	};\n\n  	$scope.onFornecedorEtiquetaHistoricoAdd = function(etiqueta) {\n  		var refFornecedorEtiquetaHistorico = firebase.database()\n  				.ref('fornecedores')\n  				.child($stateParams.id)\n  				.child('etiquetas')\n  				.child(etiqueta.$id);\n  		$scope.fornecedorEtiquetaHistorico = $firebaseArray(refFornecedorEtiquetaHistorico);\n  		//$scope.fornecedorEtiquetaHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorEtiquetaHistorico/'+etiqueta.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorEtiquetaHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	}\n\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorEtiquetaHistoricoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject','$ionicPopup',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject, $ionicPopup)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log('ID de fornecedor: ' + $stateParams.idFornecedor);\n	console.log('ID de etiqueta: ' + $stateParams.idEtiqueta);\n\n	var refFornecedorEtiquetaHistorico = firebase.database()\n			.ref('fornecedores')\n			.child($stateParams.idFornecedor)\n			.child('etiquetas')\n			.child($stateParams.idEtiqueta);\n\n	$scope.fornecedorEtiquetaHistorico = $firebaseObject(refFornecedorEtiquetaHistorico);\n\n	var refFornecedor = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.idFornecedor);\n	\n	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n  	$scope.onFornecedorEtiquetaHistoricoAdd = function(etiqueta) {\n  		//$scope.fornecedorEtiquetaHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorEtiquetaHistorico/'+etiqueta.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorEtiquetaHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	};\n\n\n\n	$scope.showConfirm = function() {\n	var confirmPopup = $ionicPopup.alert({\n	 title:\n	 `\n	   	<ion-content> Pagina de etiquetas do fornecedor </ion-content>\n	 `,\n	 \n	 template: \n	 `\n	 	\n	 		Esta página exibe o histórico de etiquetas aos produtos fornecidos ou serviços prestados\n	 		deste fornecedor.</br></br>\n	 		As informações aqui contidas, são provenientes da área de compras.</br></br>\n	 		Alguns dos campos podem ter edição bloqueada pois são automaticamente\n	 		atualizados por algum processo de negócio definido no software.</br>\n\n	 `\n	});\n\n	confirmPopup.then(function(res) {\n	 if(res) {\n	   console.log('You are sure');\n	 } else {\n	   console.log('You are not sure');\n	 }\n	});\n	};\n\n 	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n\n.controller('fornecedorEtiquetaNovoCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray) {\n	var refFornecedorEtiquetas = firebase.database().ref('fornecedorEtiquetas');\n	$scope.etiquetas = $firebaseArray(refFornecedorEtiquetas);\n	console.log('Etiqueta de produtos');\n\n	$scope.onEtiquetaAdd=function (etiqueta) {\n		$scope.etiquetas.$add(etiqueta).then(function ref(argument) {\n			console.log('Etiqueta de produto adicionada');\n		});\n			etiqueta.nome = \"\";		\n	};\n\n	$scope.onEtiquetaDelete = function (etiqueta) {\n    	$scope.etiquetas.$remove(etiqueta);\n    	console.log(\"Etiqueta de produto deletada\");\n  	};\n	\n	$scope.onEtiquetaEdit = function(etiqueta) {\n	  	console.log(etiqueta);\n	  	$scope.etiqueta = etiqueta;\n	};\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n\n.controller('fornecedorContratoNovoCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray) {\n	var refFornecedorContratos = firebase.database().ref('fornecedorContratos');\n	$scope.contratos = $firebaseArray(refFornecedorContratos);\n	console.log('Contrato de produtos');\n\n	$scope.onContratoAdd=function (etiqueta) {\n		$scope.contratos.$add(etiqueta).then(function ref(argument) {\n			console.log('Contrato de produto adicionada');\n		});\n			etiqueta.nome = \"\";		\n	};\n\n	$scope.onContratoDelete = function (etiqueta) {\n    	$scope.contratos.$remove(etiqueta);\n    	console.log(\"Contrato de produto deletada\");\n  	};\n	\n	$scope.onContratoEdit = function(etiqueta) {\n	  	console.log(etiqueta);\n	  	$scope.etiqueta = etiqueta;\n	};\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n\n   \n.controller('fornecedorInsumoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject', \nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log(\"Fornecedor estoque recebeu o ID:\");\n	console.log($stateParams.id);\n	\n	var refinsumos = firebase.database().ref('insumos');\n	$scope.insumos = $firebaseArray(refinsumos);\n\n\n  	var refFornecedor = firebase.database()\n  		.ref('fornecedores')\n  		.child($stateParams.id);\n  	\n  	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n	var refFornecedorInsumo = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.id)\n		.child('insumosFornecidos');\n	\n	$scope.fornecedorInsumo = $firebaseArray(refFornecedorInsumo);\n\n  	$scope.console = function (insumo, fornecedor) {\n		console.log(fornecedor.$id);\n		console.log(insumo.$id);\n  	}\n\n	$scope.onFornecedorInsumoAdd=function (insumoNome) {\n		//console.log(insumoNome, insumoPrecoCusto);\n		//insumoId = $scope.fornecedorInsumo.length +1;\n		$scope.fornecedorInsumo.$add({nome: insumoNome});\n		//console.log($scope.fornecedorInsumo);\n	};\n\n	$scope.onFornecedorInsumoDelete = function (insumo) {\n		$scope.fornecedorInsumo.$remove(insumo);\n  	};\n\n  	$scope.onFornecedorInsumoHistoricoAdd = function(insumo) {\n  		var refFornecedorInsumoHistorico = firebase.database()\n  				.ref('fornecedores')\n  				.child($stateParams.id)\n  				.child('insumosFornecidos')\n  				.child(insumo.$id);\n  		$scope.fornecedorInsumoHistorico = $firebaseArray(refFornecedorInsumoHistorico);\n  		//$scope.fornecedorInsumoHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorInsumoHistorico/'+insumo.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorInsumoHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	}\n\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorInsumoHistoricoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject','$ionicPopup',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject, $ionicPopup)  {\n	//var refProdutorl = refProdutos+'/'+$stateParams.id;\n	console.log('ID de fornecedor: ' + $stateParams.idFornecedor);\n	console.log('ID de insumo: ' + $stateParams.idInsumo);\n\n	var refFornecedorInsumoHistorico = firebase.database()\n			.ref('fornecedores')\n			.child($stateParams.idFornecedor)\n			.child('insumosFornecidos')\n			.child($stateParams.idInsumo);\n\n	$scope.fornecedorInsumoHistorico = $firebaseObject(refFornecedorInsumoHistorico);\n\n	var refFornecedor = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.idFornecedor);\n	\n	$scope.fornecedor= $firebaseObject(refFornecedor);\n\n  	$scope.onFornecedorInsumoHistoricoAdd = function(insumo) {\n  		//$scope.fornecedorInsumoHistorico.$add({'teste': 'teste'});\n		//$location.path('/fornecedorInsumoHistorico/'+insumo.$id);\n  	    \n  	            /*$http.get(\"#/fornecedorInsumoHistorico/\" + argument.id)\n  	                .then(function(res){ return res.data; });*/\n  	};\n\n\n\n	$scope.showConfirm = function() {\n	var confirmPopup = $ionicPopup.alert({\n	 title:\n	 `\n	   	<ion-content> Pagina de insumos do fornecedor </ion-content>\n	 `,\n	 \n	 template: \n	 `\n	 	\n	 		Esta página exibe o histórico de produtos fornecidos ou serviços prestados\n	 		deste fornecedor.</br></br>\n	 		As informações aqui contidas, são provenientes da área de compras.</br></br>\n	 		Alguns dos campos podem ter edição bloqueada pois são automaticamente\n	 		atualizados por algum processo de negócio definido no software.</br>\n\n	 `\n	});\n\n	confirmPopup.then(function(res) {\n	 if(res) {\n	   console.log('You are sure');\n	 } else {\n	   console.log('You are not sure');\n	 }\n	});\n	};\n\n 	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n\n.controller('fornecedorEnderecoCtrl', ['$scope', '$stateParams', '$firebaseObject',\nfunction ($scope, $stateParams, $firebaseObject)  {\n	//var refProdutoUrl = refProdutos+'/'+$stateParams.id;\n\n	var refFornecedorEndereco = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.id)\n		.child('endereco');\n	\n	$scope.address = {\n	    zipcode: null,\n	    street: null,\n	    neighborhood: null,\n	    uf: null,\n	    city: null,\n	    unit: null,\n	    ibge: null,\n	    gia: null,\n	}\n\n	$scope.fornecedorEndereco = $firebaseObject(refFornecedorEndereco);\n	\n	console.log(\"Endereço recebeu o fornecedor de ID:\");\n	console.log($stateParams.id);\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('fornecedorFichaCadastralCtrl', ['$scope', '$stateParams', '$firebaseObject',\nfunction ($scope, $stateParams, $firebaseObject)  {\n	//var refProdutoUrl = refProdutos+'/'+$stateParams.id;\n\n	var refEndereco = firebase.database()\n		.ref('fornecedores')\n		.child($stateParams.id)\n		.child('fichaCadastral');\n	\n	$scope.fichaCadastral = $firebaseObject(refEndereco);\n	\n	console.log(\"Ficha cadastral recebeu o fornecedor de ID:\");\n	console.log($stateParams.id);\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n   \n.controller('estoqueDoItemCtrl', ['$scope', '$stateParams',  '$firebaseArray', \nfunction ($scope, $stateParams, $firebaseArray)  {\n\n\n}])\n   \n.controller('produtoProducaoCtrl', ['$scope', '$stateParams', '$firebaseArray', '$firebaseObject',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject)  {\n	//var refProdutoUrl = refProdutos+'/'+$stateParams.id;\n	var refEstoques = firebase.database().ref('estoques');\n	$scope.estoques = $firebaseArray(refEstoques);\n\n	var refProdutoProducao = firebase.database()\n		.ref('produtos')\n		.child($stateParams.id)\n		.child('producao');\n	\n	$scope.produtoProducao = $firebaseObject(refProdutoProducao);\n	//$scope.produtoProducaoArray = $firebaseArray(refProdutoProducao);\n	\n	console.log(\"Producao do produto\");\n	console.log($stateParams.id);\n//	console.log($scope.produtoProducao);\n//	console.log($scope.produtoProducaoArray);\n\n\n	$scope.onProducaoAdd=function (quantidade) {\n		\n		var obj = $scope.produtoProducao;\n		var dataEntrada = new Date;\n		console.log(\"Quantidade \" + quantidade + \" entrada\");\n		obj.ultimaEntrada = dataEntrada.getTime();\n		obj.entrada = quantidade;\n		obj.saldo = obj.saldo + quantidade;\n		obj.$save().then(function(ref) {\n		  ref.key === obj.$id; // true\n		}, function(error) {\n		  console.log(\"Error:\", error);\n		});\n	};\n\n	$scope.onProducaoDecrease=function (quantidade) {\n		var obj = $scope.produtoProducao;\n		var dataSaida = new Date;\n		console.log(\"Quantidade \" + quantidade + \" saída\");\n		obj.ultimaSaida = dataSaida.getTime();\n		obj.saida = quantidade;\n		obj.saldo = obj.saldo - quantidade;	\n		obj.$save().then(function(ref) {\n		  ref.key === obj.$id; // true\n		}, function(error) {\n		  console.log(\"Error:\", error);\n		});\n	};\n	\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n\n.controller('produtoCategoriasCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray) {\n	var refProdutoCategorias = firebase.database().ref('produtoCategorias');\n	$scope.categorias = $firebaseArray(refProdutoCategorias);\n	console.log('Categoria de produtos');\n\n	$scope.onCategoriaAdd=function (categoria) {\n		$scope.categorias.$add(categoria).then(function ref(argument) {\n			console.log('Categoria de produto adicionada');\n		});\n			categoria.nome = \"\";		\n	};\n\n	$scope.onCategoriaDelete = function (categoria) {\n    	$scope.categorias.$remove(categoria);\n    	console.log(\"Categoria de produto deletada\");\n  	};\n	\n	$scope.onCategoriaEdit = function(categoria) {\n	  	console.log(categoria);\n	  	$scope.categoria = categoria;\n	};\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n   \n.controller('estoqueLocalCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n	var refEstoques = firebase.database().ref('estoques');\n	$scope.estoques = $firebaseArray(refEstoques);\n	console.log('Estoque local');\n\n	$scope.onEstoqueAdd=function (estoque) {\n		$scope.estoques.$add(estoque).then(function ref(argument) {\n			console.log('Local de estoque adicionado');			\n		});\n		estoque.nome = \"\";	\n	};\n\n	$scope.onEstoqueDelete = function (estoque) {\n    	$scope.estoques.$remove(estoque);\n    	console.log(\"Estoque de insumo deletada\");\n  	};\n	\n	$scope.onEstoqueEdit = function(estoque) {\n	  	console.log(estoque);\n	  	$scope.estoque = estoque;\n	};\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n   \n.controller('produtoEstadosCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n	var refProdutoEstados = firebase.database().ref('produtoEstados');\n	$scope.estados = $firebaseArray(refProdutoEstados);\n	$scope.data = {	showDelete: false };\n	console.log('Estados de produtos');\n\n	$scope.onEstadoAdd=function (estado) {\n		$scope.estados.$add(estado).then(function ref(argument) {\n			console.log('Estado de produto adicionado');\n		});\n		estado.nome = \"\";\n	};\n\n	$scope.onEstadoDelete = function (estado) {\n    	$scope.estados.$remove(estado);\n    	console.log(\"Estado deletado\");\n  	};\n	\n	$scope.onEstadoEdit = function(estado) {\n	  console.log(estado);\n	  $scope.estado = estado;\n	};\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n\n.controller('fornecedorEstadosCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n	var refForneceodrEstados = firebase.database().ref('fornecedorEstados');\n	$scope.estados = $firebaseArray(refForneceodrEstados);\n	$scope.data = {	showDelete: false };\n	console.log('Estados de fornecedor');\n\n	$scope.onEstadoAdd=function (estado) {\n		$scope.estados.$add(estado).then(function ref(argument) {\n			console.log('Estado de fornecedor adicionado');\n		});\n		estado.nome = \"\";\n	};\n\n	$scope.onEstadoDelete = function (estado) {\n    	$scope.estados.$remove(estado);\n    	console.log(\"Estado deletado\");\n  	};\n	\n	$scope.onEstadoEdit = function(estado) {\n	  console.log(estado);\n	  $scope.estado = estado;\n	};\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n\n.controller('fornecedorCategoriasCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray) {\n	var refFornecedorCategorias = firebase.database().ref('fornecedorCategorias');\n	$scope.categorias = $firebaseArray(refFornecedorCategorias);\n	console.log('Categoria de fornecedor');\n\n	$scope.onCategoriaAdd=function (categoria) {\n		$scope.categorias.$add(categoria).then(function ref(argument) {\n			console.log('Categoria de fornecedor adicionada');\n		});\n		categoria.nome = \"\";\n	};\n\n	$scope.onCategoriaDelete = function (categoria) {\n    	$scope.categorias.$remove(categoria);\n    	console.log(\"Categoria de fornecedor deletada\");\n  	};\n	\n	$scope.onCategoriaEdit = function(categoria) {\n	  	console.log(categoria);\n	  	$scope.categoria = categoria;\n	};\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n\n.controller('produtoEstoqueCtrl', ['$scope', '$stateParams', '$firebaseObject', '$ionicModal', '$ionicPopup',\nfunction ($scope, $stateParams, $firebaseObject, $ionicModal, $ionicPopup)  {\n	//var refProdutoUrl = refProdutos+'/'+$stateParams.id;\n	console.log(\"Produto estoque recebeu o ID:\");\n	console.log($stateParams.id);\n\n	var refProdutoEstoque = firebase.database()\n		.ref('produtos')\n		.child($stateParams.id)\n		.child('estoque');\n	\n	$scope.produtoEstoque = $firebaseObject(refProdutoEstoque);\n	\n	$scope.onEstoqueAdd=function (quantidade) {\n		var obj = $scope.produtoEstoque;\n		var dataEntrada = new Date;\n		console.log(\"Quantidade \" + quantidade + \" entrada\");\n		obj.ultimaEntrada = dataEntrada.getTime();\n			if ( obj.saldo === undefined ) {\n				obj.saldo = 0;\n			}\n		obj.saldo = obj.saldo + quantidade;\n		obj.$save().then(function(ref) {\n		  ref.key === obj.$id; // true\n		}, function(error) {\n		  console.log(\"Error:\", error);\n		});\n\n	};\n\n	$scope.onEstoqueDecrease=function (quantidade) {\n		var obj = $scope.produtoEstoque;\n		var dataSaida = new Date;\n		console.log(\"Quantidade \" + quantidade + \" saída\");\n		obj.ultimaSaida = dataSaida.getTime();\n		obj.saida = quantidade;\n		obj.saldo = obj.saldo - quantidade;	\n		obj.$save().then(function(ref) {\n		  ref.key === obj.$id; // true\n		}, function(error) {\n		  console.log(\"Error:\", error);\n		});\n	};\n\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n	$ionicModal.fromTemplateUrl('produtoEstoqueMovimentacao.html', {\n		scope: $scope,\n		animation: 'slide-in-up'\n	}).then(function(modal) {\n		$scope.modal = modal;\n	});\n	$scope.openModal = function() {\n		$scope.modal.show();\n	};\n	$scope.closeModal = function() {\n		$scope.modal.hide();\n	};\n	// Cleanup the modal when we're done with it!\n	$scope.$on('$destroy', function() {\n		$scope.modal.remove();\n	});\n	// Execute action on hide modal\n	$scope.$on('modal.hidden', function() {\n	// Execute action\n	});\n	// Execute action on remove modal\n	$scope.$on('modal.removed', function() {\n	// Execute action\n	});\n\n	$ionicModal.fromTemplateUrl('produtoEstoqueEmitirOrdemCompra.html', {\n		scope: $scope,\n		animation: 'slide-in-up'\n	}).then(function(modal) {\n		$scope.modal = modal;\n	});\n	$scope.openModal = function() {\n		$scope.modal.show();\n	};\n	$scope.closeModal = function() {\n		$scope.modal.hide();\n	};\n	// Cleanup the modal when we're done with it!\n	$scope.$on('$destroy', function() {\n		$scope.modal.remove();\n	});\n	// Execute action on hide modal\n	$scope.$on('modal.hidden', function() {\n	// Execute action\n	});\n	// Execute action on remove modal\n	$scope.$on('modal.removed', function() {\n	// Execute action\n	});\n\n	$scope.showConfirm = function() {\n	var confirmPopup = $ionicPopup.alert({\n	 title:\n	 `\n	   	<ion-content> Pagina de estoque do produto </ion-content>\n	 `,\n	 \n	 template: \n	 `\n	 	\n	 		Esta página exibe as informações do estoque do produto.</br></br>\n	 		A opção de movimentar estoque habilita o gerenciamento de estoque para esse produto.\n	 		As informações aqui contidas, são também atualizadas também pela área de compras e vendas.</br></br>\n	 		Alguns dos campos podem ter edição bloqueada pois são automaticamente\n	 		atualizados por algum processo de negócio definido no software.</br>\n\n	 `\n	});\n\n	confirmPopup.then(function(res) {\n	 if(res) {\n	   console.log('You are sure');\n	 } else {\n	   console.log('You are not sure');\n	 }\n	});\n	};\n\n}])\n\n.controller('fornecedorEditarCtrl', ['$scope', '$stateParams', '$firebaseObject', '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject, viaCEP) {\n	// para apagar direto na lista\n	var refFornecedores = firebase.database().ref('fornecedores');\n	$scope.fornecedores = $firebaseObject(refFornecedores);\n	var fornecedores = $scope.fornecedores;\n	console.log('fornecedores');\n	console.log(fornecedores);\n//	var refFornecedores = firebase.database().ref('fornecedores');\n//	$scope.fornecedores = $firebaseArray(refFornecedores);\n\n	var refFornecedorEstado = firebase.database().ref('fornecedorEstados');\n	$scope.estados = $firebaseArray(refFornecedorEstado);\n	\n	var refFornecedorCategorias = firebase.database().ref('fornecedorCategorias');\n	$scope.categorias = $firebaseArray(refFornecedorCategorias);\n\n	$scope.onFornecedorLoad = function(idFornecedor) {\n		console.log(\"onFornecedorLoad\");\n		console.log(\"$stateParams: \" + idFornecedor);\n		var refFornecedor = firebase.database().ref().child('fornecedores').child(idFornecedor);\n		$scope.fornecedor = $firebaseArray(refFornecedor);\n		console.log($scope.fornecedor.$id);\n	};\n	\n	$scope.onFornecedorLoad($stateParams.idFornecedor);\n\n	$scope.onFornecedorEdit = function(fornecedor) {\n		$scope.fornecedor = fornecedor;\n		var refFornecedorInsumos = firebase.database()\n			.ref('fornecedores')\n			.child(fornecedor.$id)\n			.child('insumos');\n		\n		$scope.fornecedorComposicao = $firebaseArray(refFornecedorInsumos);\n		console.log(fornecedor.$id);\n	  	console.log(fornecedor);\n	  	console.log()\n\n	  	angular.forEach(fornecedor.composition, function(value, key) {\n	  	  console.log(value, key);\n	  	});\n	};\n\n	$scope.onFornecedorDelete = function (fornecedor) {\n    	$scope.fornecedores.$remove(insumo);\n    	console.log(\"Fornecedor deletado\");\n  	};\n	\n	// inicio toggle\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n	\n}])\n\n.controller('fornecedorNovoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject)  {\n	var refFornecedores = firebase.database().ref().child('fornecedores');\n	$scope.fornecedores = $firebaseArray(refFornecedores);\n	$scope.onFornecedorAdd=function (fornecedor) {\n		$scope.fornecedores.$add(fornecedor).then(function (ref) {\n			var id = ref.key;\n			console.log('Fornecedor de fornecedor adicionado ' + id );\n			console.log(ref);\n			//$location.path(\"/editarFornecedor/:idFornecedor\");\n			fornecedor.nome = \"\";\n		});\n	};\n\n	$scope.onFornecedorDelete = function (fornecedor) {\n    	$scope.fornecedores.$remove(fornecedor);\n    	console.log(\"Fornecedor deletado\");\n  	};\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('insumoEstadosCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n	var refInsumoEstados = firebase.database().ref('insumoEstados');\n	$scope.estados = $firebaseArray(refInsumoEstados);\n	$scope.data = {	showDelete: false };\n	console.log('Estados de insumos');\n\n	$scope.onEstadoAdd=function (estado) {\n		$scope.estados.$add(estado).then(function ref(argument) {\n			console.log('Estado de insumo adicionado');\n		});\n		estado.nome = \"\";\n	};\n\n	$scope.onEstadoDelete = function (estado) {\n    	$scope.estados.$remove(estado);\n    	console.log(\"Estado deletado\");\n  	};\n	\n	$scope.onEstadoEdit = function(estado) {\n	  console.log(estado);\n	  $scope.estado = estado;\n	};\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n	\n}])\n   \n.controller('insumoStatusCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n\n\n}])\n   \n.controller('produtoFiscalCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n\n\n}])\n   \n.controller('lojaVirtualCategoriasCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n\n\n}])\n   \n.controller('produtoVendaConcluDaCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray)  {\n\n\n}])\n\n.controller('insumoNovoCtrl', ['$scope', '$stateParams', '$firebaseObject', '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject) {\n	var refInsumos = firebase.database().ref().child('insumos');\n	$scope.insumos = $firebaseObject(refInsumos);\n\n	$scope.onInsumoAdd=function (insumo) {\n		$scope.insumos.$add(insumo).then(function (ref) {\n			var id = ref.key;\n			console.log('Insumo de insumo adicionado ' + id );\n			console.log(ref);\n			//$location.path(\"/editarInsumo/:idInsumo\");\n			insumo.nome = \"\";\n		});\n	};\n	\n	$scope.onInsumoDelete = function (insumo) {\n    	$scope.insumos.$remove(insumo);\n    	console.log(\"Insumo deletado\");\n  	};\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n\n.controller('insumoEditarCtrl', ['$scope', '$stateParams', '$firebaseObject', '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject) {\n	// para apagar direto na lista\n	var insumoId = $stateParams.insumoId;\n	var insumoNome = $stateParams.insumoNome;\n	console.log('Insumo editar recebeu o insumoId: '+insumoId+' de nome: '+insumoNome);\n\n	var refInsumos = firebase.database().ref('insumos');\n	$scope.insumos = $firebaseObject(refInsumos);\n	var insumos = $scope.insumos;\n\n	var refInsumoEstado = firebase.database().ref('insumoEstados');\n	$scope.estados = $firebaseArray(refInsumoEstado);\n	\n	var refInsumoCategorias = firebase.database().ref('insumoCategorias');\n	$scope.categorias = $firebaseArray(refInsumoCategorias);\n	 	\n	$scope.onInsumoLoad = function(insumoId) {\n		console.log(\"onInsumoLoad\");\n		var refInsumo = firebase.database().ref()\n			.child('insumos')\n			.child(insumoId);\n		$scope.insumo = $firebaseArray(refInsumo);\n	};\n	\n	$scope.onInsumoLoad(insumoId);\n\n	$scope.onInsumoEdit = function(insumo) {\n		$scope.insumo = insumo;\n	};\n\n	$scope.onInsumoDelete = function (insumo) {\n    	$scope.insumos.$remove(insumo);\n    	console.log(\"Insumo deletado\");\n  	};\n	\n	// inicio toggle\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n	\n}])\n\n.controller('insumoFragmentacaoCtrl', ['$scope', '$stateParams',  '$firebaseArray', '$firebaseObject', \nfunction ($scope, $stateParams, $firebaseArray, $firebaseObject)  {\n	var insumoId = $stateParams.insumoId;\n	var insumoNome = $stateParams.insumoNome;\n	console.log('Insumo fragmentação recebeu o insumoId: '+insumoId+' de nome: '+insumoNome);\n	\n	var refProdutos = firebase.database().ref('produtos');\n	$scope.produtos = $firebaseArray(refProdutos);\n	\n	var refInsumo = firebase.database()\n		.ref('insumos')\n		.child(insumoId);\n	$scope.insumo = $firebaseObject(refInsumo);\n\n	var refProdutoComposicao = firebase.database()\n		.ref('produtosComposicao')\n		.orderByChild('insumoId')\n		.equalTo(insumoId)\n	$scope.produtoComposicao = $firebaseArray(refProdutoComposicao);\n	console.log($scope.produtoComposicao);\n\n	$scope.onProdutoComposicaoAdd=function (produto, insumo) {\n		$scope.produtoComposicao.$add({\n			'produtoNome': produto.nome, \n			'produtoId': produto.$id, \n			'insumoNome':insumo.nome,\n			'insumoId': insumo.$id \n		});\n	};\n\n	$scope.onProdutoComposicaoDelete = function (insumo) {\n		$scope.produtoComposicao.$remove(insumo);\n  	};\n\n	$scope.data = {	showDelete: false };\n	$scope.shownGroup=false;\n	\n	$scope.toggleGroup = function(group) {\n	  if ($scope.isGroupShown(group)) {\n	    $scope.shownGroup = null;\n	  } else {\n	    $scope.shownGroup = group;\n	  }\n	};\n\n	$scope.isGroupShown = function(group) {\n	  return $scope.shownGroup === group;\n	};\n	\n	$scope.back = function() { \n    	window.history.back();\n    };\n\n}])\n\n.controller('insumoCategoriasCtrl', ['$scope', '$stateParams',  '$firebaseArray',\nfunction ($scope, $stateParams, $firebaseArray) {\n	var refInsumoCategorias = firebase.database().ref('insumoCategorias');\n	$scope.categorias = $firebaseArray(refInsumoCategorias);\n	console.log('Categoria de insumos');\n\n	$scope.onCategoriaAdd=function (categoria) {\n		$scope.categorias.$add(categoria).then(function ref(argument) {\n			console.log('Categoria de insumo adicionada');\n		});\n		categoria.nome = \"\";\n	};\n\n	$scope.onCategoriaDelete = function (categoria) {\n    	$scope.categorias.$remove(categoria);\n    	console.log(\"Categoria de insumo deletada\");\n  	};\n	\n	$scope.onCategoriaEdit = function(categoria) {\n	  	console.log(categoria);\n	  	$scope.categoria = categoria;\n	};\n\n	$scope.back = function() { \n    	window.history.back();\n    };\n}])\n",
					"settings":
					{
						"buffer_size": 56387,
						"line_ending": "Windows"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 219.0,
				"last_filter": "install",
				"selected_items":
				[
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"remove",
						"Package Control: Remove Package"
					]
				],
				"width": 528.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/D/dev/Git/yolle/ionic",
				"/D/dev/Git/yolle/ionic/www",
				"/D/dev/Git/yolle/ionic/www/js"
			],
			"file_history":
			[
				"/D/dev/Git/yolle/ionic/www/js/controllers.js",
				"/D/Users/Roger/AppData/Roaming/Sublime Text 3/xx/Backup/20160701170027/Intellitip/db/PHP.json",
				"/D/Users/Roger/AppData/Roaming/Sublime Text 3/xx/Backup/20160909212456/TypeScript/Preferences.sublime-settings",
				"/D/Users/Roger/AppData/Roaming/Sublime Text 3/xx/Packages/TypeScript/Preferences.sublime-settings",
				"/D/Users/Roger/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings"
			],
			"find":
			{
				"height": 23.0
			},
			"find_in_files":
			{
				"height": 90.0,
				"where_history":
				[
					"D:\\Users\\Roger\\AppData\\Roaming\\Sublime Text 3\\xx"
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"controller",
					"color"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": true,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "D:\\dev\\Git\\yolle\\ionic"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 56387,
								"regions":
								{
								},
								"selection":
								[
									[
										308,
										308
									]
								],
								"settings":
								{
									"default_dir": "D:\\dev\\Git\\yolle\\ionic",
									"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 34.0
			},
			"input":
			{
				"height": 0.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,2,3,-1,-1,-1,-1,717,279,179,935",
			"project": "",
			"replace":
			{
				"height": 42.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 150.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 1,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
